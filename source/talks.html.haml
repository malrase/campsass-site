=partial "header"
.section.talks
  %a{:name=>"talks"}
    %h2 Talks
  -# .segment.break
  -#   %h3.time
  -#     09:30am
  -#   .blurb
  -#     %h3 Coffee
  .segment
    .button
      %h3.speaker Hampton Catlin
      .title Opening Remarks
      %span.expand
    .content.closed
      .description
        %p Hampton will introduce the conference.
  .segment
    .button
      %h3.speaker Micah Godbolt
      .title Visual Regression Testing with PhantomCSS
      %span.expand
    .content.closed
      .description
        %p Getting into component based design? Rocking out a little Pattern Lab? Do you have the best looking style guides? Take things to the next level with a little Visual Regression Testing!

        %p With PhantomCSS you'll be able to write test files right next to your Sass  component partials. These tests will ensure that the appearance and interactions of your components are consistent from build to build.

        %p No more being surprised that your country selector has been broken on mobile devices for the past 4 builds! With PhantomCSS you'll have a suite of tests to run after every build that will ensure your site is looking and functioning exactly like it should!

        %p Come learn about the tools, the process and the things I've learned running PhantomCSS on a large, distributed style system for Redhat.com
  .segment
    .button
      %h3.speaker Ian Carrico
      .title Don't Use Sass
      %span.expand
    .content.closed
      .description
        %p Sass has been around for a long time, and over the past few years adoption has been widespread. The experiment has been done, the results are in: Sass is over. The world of pre-processors has come to an end, and the issues that arise from using them far outweighs any benefits.

        %p @extend creates crazy code, completely unpredictable. Vendor prefixes should be done in post-processors. @mixins just write out too much code. Probably worst of all, Ruby-sass is slow— while LibSass is not feature complete.

        %p It is time to jump ship, it is time to return to vanilla CSS.
  .segment
    .button
      %h3.speaker Jina Bolton
      .title TBD
      %span.expand
    .content.closed
      .description
        %p Jina will talk about some awesome Sassy stuff.
  .segment
    .button
      %h3.speaker Bermon Painter
      .title TBD
      %span.expand
    .content.closed
      .description
        %p Bermon will talk about some awesome Sassy stuff.
  .segment
    .button
      %h3.speaker Una Kravets
      .title TBD
      %span.expand
    .content.closed
      .description
        %p Una will talk about some awesome Sassy stuff.
  .segment
    .button
      %h3.speaker Mina Markham
      .title TBD
      %span.expand
    .content.closed
      .description
        %p Mina will talk about some awesome Sassy stuff.
  .segment
    .button
      %h3.speaker Micah Godbolt
      .title Visual Regression Testing with PhantomCSS
      %span.expand
    .content.closed
      .description
        %p Getting into component based design? Rocking out a little Pattern Lab? Do you have the best looking style guides? Take things to the next level with a little Visual Regression Testing!

        %p With PhantomCSS you'll be able to write test files right next to your Sass  component partials. These tests will ensure that the appearance and interactions of your components are consistent from build to build.

        %p No more being surprised that your country selector has been broken on mobile devices for the past 4 builds! With PhantomCSS you'll have a suite of tests to run after every build that will ensure your site is looking and functioning exactly like it should!

        %p Come learn about the tools, the process and the things I've learned running PhantomCSS on a large, distributed style system for Redhat.com
  .segment
    .button
      %h3.speaker Ian Carrico
      .title Don't Use Sass
      %span.expand
    .content.closed
      .description
        %p Sass has been around for a long time, and over the past few years adoption has been widespread. The experiment has been done, the results are in: Sass is over. The world of pre-processors has come to an end, and the issues that arise from using them far outweighs any benefits.

        %p @extend creates crazy code, completely unpredictable. Vendor prefixes should be done in post-processors. @mixins just write out too much code. Probably worst of all, Ruby-sass is slow— while LibSass is not feature complete.

        %p It is time to jump ship, it is time to return to vanilla CSS.
